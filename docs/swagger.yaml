definitions:
  dto.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginResponse:
    properties:
      expire_at:
        type: string
      token:
        type: string
      token_prefix:
        description: '"Bearer"'
        type: string
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  dto.RegisterResponse:
    properties:
      id:
        type: integer
    type: object
  dto.UserCreateRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  dto.UserInfoResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      roles:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
  dto.UserPageResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/model.User'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  dto.UserPermissionsResponse:
    properties:
      menus:
        items:
          $ref: '#/definitions/model.Menu'
        type: array
    type: object
  model.Menu:
    properties:
      children:
        items:
          $ref: '#/definitions/model.Menu'
        type: array
      createdAt:
        type: string
      icon:
        type: string
      id:
        type: integer
      name:
        type: string
      parent_id:
        type: integer
      path:
        type: string
      sort:
        type: integer
      status:
        type: integer
      type:
        type: integer
      updatedAt:
        type: string
    type: object
  model.Role:
    properties:
      code:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        description: '0: inactive, 1: active, 2: deleted'
        type: integer
      updatedAt:
        type: string
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      roles:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      status:
        description: '0: inactive, 1: active, 2: deleted'
        type: integer
      updatedAt:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for go-web-template
  title: go-web-template API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: 登录请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录响应
          schema:
            $ref: '#/definitions/dto.LoginResponse'
      summary: 登录
      tags:
      - auth
  /auth/permissions:
    get:
      consumes:
      - application/json
      description: 获取用户权限
      produces:
      - application/json
      responses:
        "200":
          description: 用户权限响应
          schema:
            $ref: '#/definitions/dto.UserPermissionsResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取用户权限
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: 注册
      parameters:
      - description: 注册请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册响应
          schema:
            $ref: '#/definitions/dto.RegisterResponse'
      summary: 注册
      tags:
      - auth
  /auth/user:
    get:
      consumes:
      - application/json
      description: 获取用户信息
      produces:
      - application/json
      responses:
        "200":
          description: 用户信息响应
          schema:
            $ref: '#/definitions/dto.UserInfoResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - auth
  /users:
    get:
      description: Get users
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserPageResponse'
      security:
      - ApiKeyAuth: []
      summary: Get users
      tags:
      - users
    post:
      description: Create user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
